family: web-application
cpu: "512"
memory: "1024"
networkMode: awsvpc
requiresCompatibilities:
  - FARGATE
executionRoleArn: arn:aws:iam::123456789012:role/ecsTaskExecutionRole
taskRoleArn: arn:aws:iam::123456789012:role/ecsTaskRole
containers:
- name: nginx
  image: nginx:1.21-alpine
  ports:
  - containerPort: 80
    protocol: TCP
  resources:
    limits:
      cpu: 256m
      memory: 512Mi
    requests:
      memory: 256Mi
  env:
  - name: ENVIRONMENT
    value: production
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: database-credentials
        key: password
  - name: API_CONFIG
    valueFrom:
      configMapKeyRef:
        name: api-configuration
        key: config.json
  volumeMounts:
  - name: static-files
    mountPath: /usr/share/nginx/html
    readOnly: true
  - name: nginx-config
    mountPath: /etc/nginx/conf.d
    readOnly: true
- name: app
  image: myapp:v1.2.3
  ports:
  - containerPort: 8080
    protocol: TCP
  resources:
    limits:
      cpu: 256m
      memory: 512Mi
    requests:
      memory: 256Mi
  env:
  - name: PORT
    value: "8080"
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: database-credentials
        key: url
  - name: REDIS_CONFIG
    valueFrom:
      configMapKeyRef:
        name: redis-configuration
        key: config.yaml
  volumeMounts:
  - name: app-logs
    mountPath: /var/log/app
volumes:
- name: static-files
  hostPath:
    path: /opt/static-content
- name: nginx-config
  hostPath:
    path: /opt/nginx-config
- name: app-logs
  emptyDir: {}
tags:
  Environment: production
  Team: platform
  Project: web-app
  Owner: devops-team